[{"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js":"1","/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js":"2","/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx":"3","/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx":"4","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.jsx":"5","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx":"6","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx":"7"},{"size":362,"mtime":1606229592683,"results":"8","hashOfConfig":"9"},{"size":500,"mtime":1606229592683,"results":"10","hashOfConfig":"9"},{"size":1227,"mtime":1607085698289,"results":"11","hashOfConfig":"9"},{"size":952,"mtime":1607098206986,"results":"12","hashOfConfig":"9"},{"size":3209,"mtime":1607256905694,"results":"13","hashOfConfig":"9"},{"size":456,"mtime":1607247549599,"results":"14","hashOfConfig":"9"},{"size":3532,"mtime":1607256246735,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kfw5bx",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js",[],["33","34"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx",["35","36","37"],"import { Box, Button, Container, createMuiTheme, ThemeProvider, Typography } from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport './App.css';\nimport MakeOrder from './components/MakeOrder';\nimport UserProvider from './contexts/UserContext';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF9900',\n      contrastText: '#FFFFFF',\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"'Inter'\",\n    ].join(','),\n    h2: {\n      fontSize: 20,\n      fontWeight: 'bold',\n    },\n    h3: {\n      fontSize: 18,\n    },\n    h4: {\n      fontSize: 12,\n    }\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <UserProvider>\n        <Box bgcolor=\"#E5E5E5\">\n          <Container maxWidth=\"sm\">\n            <Box bgcolor=\"white\">\n              <MakeOrder />\n            </Box>\n          </Container>\n        </Box>\n      </UserProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.jsx",["38","39","40"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx",["41"],"import React, { forwardRef, useState } from 'react';\nimport { Map, Placemark } from 'react-yandex-maps';\nimport { AppBar, Box, Dialog, IconButton, List, ListItem, \n    ListItemIcon, Slide, Toolbar, Typography, ListItemText, Grid, Button } from '@material-ui/core';\nimport { Close as CloseIcon, LocationOn } from '@material-ui/icons';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst dronePoints = [\n    {\n        name: 'Москва',\n        pos: [55.684758, 37.738521],\n    },\n    {\n        name: 'Ульяновск',\n        pos: [54.3187, 48.3978],\n    },\n    {\n        name: 'Димитровград',\n        pos: [54.2198, 49.6212],\n    },\n    {\n        name: 'Сочи',\n        pos: [43.6028, 39.7342],\n    },\n    {\n        name: 'Сочи 2',\n        pos: [44.6028, 39.7342],\n    }\n]\n\nconst DroneMap = ({ open, onClose, onSelect }) => {\n    const [selectedPoint, setSelectedPoint] = useState(null);\n    const [coords, setCoords] = useState([55.75, 37.57]);\n    return (\n        <Dialog fullScreen open={!!open} onClose={onClose}\n        TransitionComponent={Transition}>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={onClose}\n                    aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h2\">\n                        Выберите Дрон-пойнт ({ open === 'from' ? 'откуда' : 'куда'})\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Map state={{ center: coords, zoom: 9 }}\n                    className=\"yandex-map\"\n                    width=\"100%\" height=\"67vh\">\n                        {dronePoints.map(point => \n                        <Placemark key={point.name} geometry={point.pos}\n                        options={{ iconColor: point.name === selectedPoint ? 'red' : 'blue' }}/>)}\n                    </Map>\n                </Grid>\n                <Grid item>\n                    <List component=\"nav\" style={{ height: '20vh', overflow: 'auto' }}>\n                        {dronePoints.map(point => \n                        <ListItem button selected={point.name === selectedPoint}\n                        key={point.name}\n                        onClick={() => {\n                            setSelectedPoint(p => p === point.name ? null : point.name);\n                            setCoords(point.pos);\n                        }}>\n                            <ListItemIcon>\n                                <LocationOn color={point.name === selectedPoint ? \n                                'secondary' : 'inherit'}/>\n                            </ListItemIcon>\n                            <ListItemText primary={point.name}/>\n                        </ListItem>)}\n                    </List>\n                </Grid>\n            </Grid>\n            <Button fullWidth variant=\"contained\" color=\"primary\"\n            disabled={!selectedPoint}\n            style={{ position: 'relative', bottom: 0 }}\n            onClick={() => {\n                const point = dronePoints.find(p => p.name === selectedPoint);\n                onSelect(point, open);\n                onClose();\n                setSelectedPoint(null);\n            }}>Выбрать</Button>\n        </Dialog>\n    )\n}\n\nexport default DroneMap\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":15,"nodeType":"48","messageId":"49","endLine":1,"endColumn":21},{"ruleId":"46","severity":1,"message":"50","line":1,"column":65,"nodeType":"48","messageId":"49","endLine":1,"endColumn":75},{"ruleId":"46","severity":1,"message":"51","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"52","line":1,"column":29,"nodeType":"48","messageId":"49","endLine":1,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":10,"column":9,"nodeType":"48","messageId":"55","endLine":10,"endColumn":13},{"ruleId":"53","severity":1,"message":"56","line":11,"column":9,"nodeType":"48","messageId":"55","endLine":11,"endColumn":13},{"ruleId":"46","severity":1,"message":"57","line":3,"column":18,"nodeType":"48","messageId":"49","endLine":3,"endColumn":21},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'orange' is defined but never used.","'Input' is defined but never used.","no-redeclare","'lat1' is already defined.","redeclared","'lat2' is already defined.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation"]