[{"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js":"1","/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js":"2","/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx":"3","/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx":"4","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.jsx":"5","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx":"6","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx":"7","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx":"8"},{"size":362,"mtime":1606229592683,"results":"9","hashOfConfig":"10"},{"size":500,"mtime":1606229592683,"results":"11","hashOfConfig":"10"},{"size":1227,"mtime":1607085698289,"results":"12","hashOfConfig":"10"},{"size":1042,"mtime":1607246005629,"results":"13","hashOfConfig":"10"},{"size":2557,"mtime":1607338070735,"results":"14","hashOfConfig":"10"},{"size":456,"mtime":1607247549599,"results":"15","hashOfConfig":"10"},{"size":3532,"mtime":1607256246735,"results":"16","hashOfConfig":"10"},{"size":2840,"mtime":1607337985272,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kfw5bx",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js",[],["37","38"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx",["39","40","41"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.jsx",["42","43","44","45","46"],"import { Box, Button, Grid, Input, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport DroneMap from '../shared/DroneMap';\nimport HeaderMenu from '../shared/HeaderMenu';\nimport OrderDetails from './OrderDetails';\n\nconst MakeOrder = () => {\n    const [placeFrom, setPlaceFrom] = useState(null);\n    const [placeTo, setPlaceTo] = useState(null);\n    const [mapOpen, setMapOpen] = useState(false);\n    const [order, setOrder] = useState(null);\n    const [isOrdering, setIsOrdering] = useState(false);\n\n    useEffect(() => {\n        const makeOrder = async () => {\n            \n        }\n    }, [isOrdering, placeFrom, placeTo]);\n\n    return (\n        <React.Fragment>\n            <DroneMap open={mapOpen} onClose={() => setMapOpen(false)}\n            onSelect={(point, type) => {\n                if (type === 'from') {\n                    setPlaceFrom(point);\n                } else {\n                    setPlaceTo(point);\n                }\n            }}/>\n            <HeaderMenu text={\"Оформить заказ\"}/>\n            <Box height=\"90vh\" padding=\"30px\" position=\"relative\">\n                <Grid container alignItems=\"center\" direction=\"column\"\n                spacing={3}>\n                    <Grid item>\n                        <Box width=\"300px\">\n                            <Typography variant=\"h3\">Маршрут</Typography>\n                            <Button variant=\"text\" fullWidth \n                            onClick={e => setMapOpen('from')}\n                            style={{\n                                border: '1px solid black',\n                                marginTop: 12,\n                                textTransform: 'none',\n                            }}>\n                                {placeFrom?.name || 'Откуда'}\n                            </Button>\n                            <Button variant=\"text\" fullWidth \n                            onClick={e => setMapOpen('to')}\n                            style={{\n                                border: '1px solid black',\n                                marginTop: 12,\n                                textTransform: 'none',\n                            }}>\n                                {placeTo?.name || 'Куда'}\n                            </Button>\n                        </Box>\n                    </Grid>\n                    <OrderDetails placeFrom={placeFrom} placeTo={placeTo} onSubmit={() => {}}/>\n                </Grid>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nexport default MakeOrder\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx",["47"],"import React, { forwardRef, useState } from 'react';\nimport { Map, Placemark } from 'react-yandex-maps';\nimport { AppBar, Box, Dialog, IconButton, List, ListItem, \n    ListItemIcon, Slide, Toolbar, Typography, ListItemText, Grid, Button } from '@material-ui/core';\nimport { Close as CloseIcon, LocationOn } from '@material-ui/icons';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst dronePoints = [\n    {\n        name: 'Москва',\n        pos: [55.684758, 37.738521],\n    },\n    {\n        name: 'Ульяновск',\n        pos: [54.3187, 48.3978],\n    },\n    {\n        name: 'Димитровград',\n        pos: [54.2198, 49.6212],\n    },\n    {\n        name: 'Сочи',\n        pos: [43.6028, 39.7342],\n    },\n    {\n        name: 'Сочи 2',\n        pos: [44.6028, 39.7342],\n    }\n]\n\nconst DroneMap = ({ open, onClose, onSelect }) => {\n    const [selectedPoint, setSelectedPoint] = useState(null);\n    const [coords, setCoords] = useState([55.75, 37.57]);\n    return (\n        <Dialog fullScreen open={!!open} onClose={onClose}\n        TransitionComponent={Transition}>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={onClose}\n                    aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h2\">\n                        Выберите Дрон-пойнт ({ open === 'from' ? 'откуда' : 'куда'})\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Map state={{ center: coords, zoom: 9 }}\n                    className=\"yandex-map\"\n                    width=\"100%\" height=\"67vh\">\n                        {dronePoints.map(point => \n                        <Placemark key={point.name} geometry={point.pos}\n                        options={{ iconColor: point.name === selectedPoint ? 'red' : 'blue' }}/>)}\n                    </Map>\n                </Grid>\n                <Grid item>\n                    <List component=\"nav\" style={{ height: '20vh', overflow: 'auto' }}>\n                        {dronePoints.map(point => \n                        <ListItem button selected={point.name === selectedPoint}\n                        key={point.name}\n                        onClick={() => {\n                            setSelectedPoint(p => p === point.name ? null : point.name);\n                            setCoords(point.pos);\n                        }}>\n                            <ListItemIcon>\n                                <LocationOn color={point.name === selectedPoint ? \n                                'secondary' : 'inherit'}/>\n                            </ListItemIcon>\n                            <ListItemText primary={point.name}/>\n                        </ListItem>)}\n                    </List>\n                </Grid>\n            </Grid>\n            <Button fullWidth variant=\"contained\" color=\"primary\"\n            disabled={!selectedPoint}\n            style={{ position: 'relative', bottom: 0 }}\n            onClick={() => {\n                const point = dronePoints.find(p => p.name === selectedPoint);\n                onSelect(point, open);\n                onClose();\n                setSelectedPoint(null);\n            }}>Выбрать</Button>\n        </Dialog>\n    )\n}\n\nexport default DroneMap\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":15,"nodeType":"56","messageId":"57","endLine":1,"endColumn":21},{"ruleId":"54","severity":1,"message":"58","line":1,"column":65,"nodeType":"56","messageId":"57","endLine":1,"endColumn":75},{"ruleId":"54","severity":1,"message":"59","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":16},{"ruleId":"54","severity":1,"message":"60","line":1,"column":29,"nodeType":"56","messageId":"57","endLine":1,"endColumn":34},{"ruleId":"54","severity":1,"message":"61","line":11,"column":12,"nodeType":"56","messageId":"57","endLine":11,"endColumn":17},{"ruleId":"54","severity":1,"message":"62","line":11,"column":19,"nodeType":"56","messageId":"57","endLine":11,"endColumn":27},{"ruleId":"54","severity":1,"message":"63","line":12,"column":24,"nodeType":"56","messageId":"57","endLine":12,"endColumn":37},{"ruleId":"54","severity":1,"message":"64","line":15,"column":15,"nodeType":"56","messageId":"57","endLine":15,"endColumn":24},{"ruleId":"54","severity":1,"message":"65","line":3,"column":18,"nodeType":"56","messageId":"57","endLine":3,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":8,"column":9,"nodeType":"56","messageId":"68","endLine":8,"endColumn":13},{"ruleId":"66","severity":1,"message":"69","line":9,"column":9,"nodeType":"56","messageId":"68","endLine":9,"endColumn":13},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'orange' is defined but never used.","'Input' is defined but never used.","'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'setIsOrdering' is assigned a value but never used.","'makeOrder' is assigned a value but never used.","'Box' is defined but never used.","no-redeclare","'lat1' is already defined.","redeclared","'lat2' is already defined.","no-global-assign","no-unsafe-negation"]