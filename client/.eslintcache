[{"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js":"1","/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js":"2","/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx":"3","/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx":"4","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx":"5","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx":"6","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx":"7","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/LoadingSpinner.jsx":"8","/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/api.js":"9","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/OrderPage.jsx":"10","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/index.js":"11","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.js":"12","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/MakeOrder.jsx":"13","/home/fullfix/Documents/GitHub/DronePoint/client/src/routes/ProtectedRoute.jsx":"14","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MyOrders/MyOrders.jsx":"15","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Login.jsx":"16"},{"size":362,"mtime":1606229592683,"results":"17","hashOfConfig":"18"},{"size":500,"mtime":1606229592683,"results":"19","hashOfConfig":"18"},{"size":1738,"mtime":1608010022648,"results":"20","hashOfConfig":"18"},{"size":1995,"mtime":1608010762708,"results":"21","hashOfConfig":"18"},{"size":456,"mtime":1607247549599,"results":"22","hashOfConfig":"18"},{"size":3661,"mtime":1608010805849,"results":"23","hashOfConfig":"18"},{"size":4266,"mtime":1607762738049,"results":"24","hashOfConfig":"18"},{"size":558,"mtime":1607688410259,"results":"25","hashOfConfig":"18"},{"size":324,"mtime":1608010005661,"results":"26","hashOfConfig":"18"},{"size":147,"mtime":1607939137806,"results":"27","hashOfConfig":"18"},{"size":63,"mtime":1607759127813,"results":"28","hashOfConfig":"18"},{"size":63,"mtime":1607759035822,"results":"29","hashOfConfig":"18"},{"size":3489,"mtime":1608010091387,"results":"30","hashOfConfig":"18"},{"size":722,"mtime":1607942945734,"results":"31","hashOfConfig":"18"},{"size":1523,"mtime":1608010008569,"results":"32","hashOfConfig":"18"},{"size":3270,"mtime":1607942766427,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"mbzdv1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js",[],["70","71"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx",["72","73"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx",["74"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx",["75","76","77","78"],"import { Box, Button, Container, Grid, Link, Paper, Typography, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport { CLIENT_URL } from '../../utils/api';\n\nfunction calcCrow([lat1, lon1], [lat2, lon2]) {\n    var R = 6371; // km\n    var dLat = toRad(lat2-lat1);\n    var dLon = toRad(lon2-lon1);\n    var lat1 = toRad(lat1);\n    var lat2 = toRad(lat2);\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c;\n    return d;\n}\n\n// Converts numeric degrees to radians\nfunction toRad(value) {\n    return value * Math.PI / 180;\n}\n\nconst OrderDetails = ({ placeTo, placeFrom, onSubmit, order }) => {\n    if (!placeFrom || !placeTo) {\n        return (\n            <Typography variant=\"h3\" align=\"center\">\n                Выберите место отправления и досавки, чтобы оформить заказ\n            </Typography>\n        )\n    }\n    const distance = calcCrow(placeFrom.pos, placeTo.pos).toFixed(2);\n    const time = 100;\n    const price = 100;\n    return (\n        <React.Fragment>\n            <Grid item>\n                <Paper elevation={5} placeholder=\"Информация о заказе\">\n                    <Box padding={'15px'} className=\"order-info-box\">\n                        <Grid container spacing={2} direction=\"column\">\n                            <Grid item>\n                                <Typography variant=\"h2\">Информация о заказе</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">\n                                    {placeFrom.name} {'==>'} {placeTo.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">Расстояние: {distance}km</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">Время: {time}мин</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">Цена: {price}руб</Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Grid>\n            <Grid item>\n                {!order && <Box width=\"300px\">\n                    <Button variant=\"contained\" color=\"primary\" fullWidth style={{\n                        textTransform: 'none',\n                    }} onClick={onSubmit}>\n                        <Typography variant=\"h3\">Заказать</Typography>\n                    </Button>\n                </Box>}\n                {order && <Box className=\"order-link\">\n                    <Typography variant=\"h2\" align=\"center\">Заказ оформлен</Typography>\n                    <Grid container justify=\"center\">\n                        <Grid item xs={10} sm={10}>\n                            <Box border=\"2px solid black\" padding={1} marginTop={1}>\n                                <Link href={`/order/${order._id}`} color=\"secondary\">\n                                    <Typography style={{ wordWrap: 'break-word' }}>\n                                        {`${CLIENT_URL}/order/${order._id}`}\n                                    </Typography>\n                                </Link>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <Box marginTop={2}>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Button href={`/order/${order._id}`} variant={'contained'}\n                                color=\"primary\">\n                                    Перейти к отслеживанию\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>}\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default OrderDetails;\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/LoadingSpinner.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/api.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/OrderPage.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/MakeOrder.jsx",["79","80"],"import { Box, Button, Grid, Input, Typography } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport DroneMap from '../shared/DroneMap';\nimport HeaderMenu from '../shared/HeaderMenu';\nimport OrderDetails from './OrderDetails';\nimport axios from 'axios';\nimport { UserContext } from '../../contexts/UserContext';\nimport LoadingSpinner from '../shared/LoadingSpinner';\nimport './MakeOrder.css';\n\nconst MakeOrder = () => {\n    const [placeFrom, setPlaceFrom] = useState(null);\n    const [placeTo, setPlaceTo] = useState(null);\n    const [mapOpen, setMapOpen] = useState(false);\n    const [order, setOrder] = useState(null);\n    const [isOrdering, setIsOrdering] = useState(false);\n    const { isAuthenticated } = useContext(UserContext);\n\n    useEffect(() => {\n        const makeOrder = async () => {\n            try {\n                const res = await axios.post(`/api/order/create/${isAuthenticated ? 'auth' : 'guest'}`, {\n                    placeFrom: placeFrom._id,\n                    placeTo: placeTo._id,\n                });\n                setOrder(res.data.response);\n            } catch(err) {\n                console.log(err);\n            }\n            setIsOrdering(false);\n        }\n        if (isOrdering) makeOrder();\n    }, [isOrdering, placeFrom, placeTo]);\n\n    if (isOrdering) return (\n        <LoadingSpinner height=\"100vh\"/>\n    )\n\n    return (\n        <React.Fragment>\n            <DroneMap open={mapOpen} onClose={() => setMapOpen(false)}\n            onSelect={(point, type) => {\n                if (type === 'from') {\n                    setPlaceFrom(point);\n                } else {\n                    setPlaceTo(point);\n                }\n            }}/>\n            <HeaderMenu text={\"Оформить заказ\"}/>\n            <Box height=\"90vh\" position=\"relative\"\n            className=\"main-box\"\n            width=\"100wv\">\n                <Grid container alignItems=\"center\" direction=\"column\"\n                spacing={3}>\n                    <Grid item>\n                        <Box width=\"300px\">\n                            <Typography variant=\"h3\">Маршрут</Typography>\n                            <Button variant=\"text\" fullWidth \n                            disabled={!!order}\n                            onClick={e => setMapOpen('from')}\n                            style={{\n                                border: '1px solid black',\n                                marginTop: 12,\n                                textTransform: 'none',\n                            }}>\n                                {placeFrom?.name || 'Откуда'}\n                            </Button>\n                            <Button variant=\"text\" fullWidth\n                            disabled={!!order} \n                            onClick={e => setMapOpen('to')}\n                            style={{\n                                border: '1px solid black',\n                                marginTop: 12,\n                                textTransform: 'none',\n                            }}>\n                                {placeTo?.name || 'Куда'}\n                            </Button>\n                        </Box>\n                    </Grid>\n                    <OrderDetails placeFrom={placeFrom} placeTo={placeTo}\n                    order={order} \n                    onSubmit={() => setIsOrdering(true)}/>\n                </Grid>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nexport default MakeOrder\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/routes/ProtectedRoute.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MyOrders/MyOrders.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Login.jsx",["81"],"import { Button, Grid, makeStyles, TextField } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { UserContext } from '../../contexts/UserContext'\nimport HeaderMenu from '../shared/HeaderMenu'\nimport LoadingSpinner from '../shared/LoadingSpinner'\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '20px',\n        width: '100%',\n    },\n    input: {\n         \"&::placeholder\": {\n        color: \"gray\"\n      },\n    }\n})\n\nconst Login = () => {\n    const { login } = useContext(UserContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [submitting, setSubmitting] = useState(false);\n\n    useEffect(() => {\n        const submit = async () => {\n            const success = await login({ username, password });\n            if (success) {\n                return history.push('/');\n            }\n            setSubmitting(false);\n            toast.error('Неверный логин или пароль');\n        }\n        if (submitting) submit();\n    }, [submitting]);\n    if (submitting) return (\n        <LoadingSpinner />\n    )\n    return (\n        <React.Fragment>\n            <HeaderMenu text={'Авторизация'}/>\n            <Grid container spacing={2} direction=\"column\"\n            className={classes.container}>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Логин\" variant=\"outlined\" size=\"small\"\n                        fullWidth value={username} onChange={e => setUsername(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Пароль\" variant=\"outlined\" type=\"password\" size=\"small\"\n                        fullWidth value={password} onChange={e => setPassword(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"contained\" color=\"primary\" fullWidth\n                        onClick={e => setSubmitting(true)}>\n                            Войти\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\">\n                            Забыли пароль\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\">\n                            Зарегестрироваться\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default Login\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":15,"nodeType":"88","messageId":"89","endLine":1,"endColumn":21},{"ruleId":"86","severity":1,"message":"90","line":1,"column":65,"nodeType":"88","messageId":"89","endLine":1,"endColumn":75},{"ruleId":"86","severity":1,"message":"91","line":3,"column":18,"nodeType":"88","messageId":"89","endLine":3,"endColumn":21},{"ruleId":"86","severity":1,"message":"92","line":1,"column":23,"nodeType":"88","messageId":"89","endLine":1,"endColumn":32},{"ruleId":"86","severity":1,"message":"93","line":1,"column":65,"nodeType":"88","messageId":"89","endLine":1,"endColumn":78},{"ruleId":"94","severity":1,"message":"95","line":9,"column":9,"nodeType":"88","messageId":"96","endLine":9,"endColumn":13},{"ruleId":"94","severity":1,"message":"97","line":10,"column":9,"nodeType":"88","messageId":"96","endLine":10,"endColumn":13},{"ruleId":"86","severity":1,"message":"98","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":33,"column":8,"nodeType":"101","endLine":33,"endColumn":40,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":39,"column":8,"nodeType":"101","endLine":39,"endColumn":20,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'useMediaQuery' is defined but never used.","no-redeclare","'lat1' is already defined.","redeclared","'lat2' is already defined.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'history', 'login', 'password', and 'username'. Either include them or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [isAuthenticated, isOrdering, placeFrom, placeTo]",{"range":"113","text":"114"},"Update the dependencies array to be: [history, login, password, submitting, username]",{"range":"115","text":"116"},[1280,1312],"[isAuthenticated, isOrdering, placeFrom, placeTo]",[1206,1218],"[history, login, password, submitting, username]"]