[{"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js":"1","/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js":"2","/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx":"3","/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx":"4","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx":"5","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx":"6","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx":"7","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/LoadingSpinner.jsx":"8","/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/api.js":"9","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/OrderPage.jsx":"10","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/index.js":"11","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.js":"12","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/MakeOrder.jsx":"13","/home/fullfix/Documents/GitHub/DronePoint/client/src/routes/ProtectedRoute.jsx":"14","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MyOrders/MyOrders.jsx":"15","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Login.jsx":"16","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/BottomMenu.jsx":"17","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Register.jsx":"18","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/DroneLocation.jsx":"19"},{"size":362,"mtime":1606229592683,"results":"20","hashOfConfig":"21"},{"size":500,"mtime":1606229592683,"results":"22","hashOfConfig":"21"},{"size":2569,"mtime":1608047051962,"results":"23","hashOfConfig":"21"},{"size":2230,"mtime":1609080569217,"results":"24","hashOfConfig":"21"},{"size":456,"mtime":1608485221218,"results":"25","hashOfConfig":"21"},{"size":3661,"mtime":1609080483077,"results":"26","hashOfConfig":"21"},{"size":4282,"mtime":1609074821393,"results":"27","hashOfConfig":"21"},{"size":558,"mtime":1608485689900,"results":"28","hashOfConfig":"21"},{"size":737,"mtime":1609172483228,"results":"29","hashOfConfig":"21"},{"size":2713,"mtime":1609670959126,"results":"30","hashOfConfig":"21"},{"size":63,"mtime":1607759127813,"results":"31","hashOfConfig":"21"},{"size":63,"mtime":1607759035822,"results":"32","hashOfConfig":"21"},{"size":3475,"mtime":1609079540804,"results":"33","hashOfConfig":"21"},{"size":722,"mtime":1607942945734,"results":"34","hashOfConfig":"21"},{"size":1523,"mtime":1608485351118,"results":"35","hashOfConfig":"21"},{"size":3311,"mtime":1608485357554,"results":"36","hashOfConfig":"21"},{"size":1879,"mtime":1608020596524,"results":"37","hashOfConfig":"21"},{"size":3442,"mtime":1608047127690,"results":"38","hashOfConfig":"21"},{"size":580,"mtime":1609081347137,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1j6kizk",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js",[],["87","88"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx",["89"],"import React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport const UserContext = createContext({\n    user: null,\n    isAuthenticated: false,\n    isLoading: true,\n    logout: () => {},\n    login: async ({ username, password }) => {},\n    register: async ({ username, password }) => {},\n})\n\nconst UserProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const token = localStorage.getItem('token');\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n\n    const logout = () => {\n        localStorage.removeItem('Authorization');\n        setUser(null);\n    }\n\n    const login = async ({ username, password }) => {\n        try {\n            const res = await axios.post('/api/auth/login', {\n                username,\n                password,\n            });\n            localStorage.setItem('token', res.data.response.token);\n            setUser(res.data.response.user);\n            return true;\n        } catch (err) {\n            console.log(err);\n            return false;\n        }\n    }\n\n    const register = async ({ username, password }) => {\n        try {\n            const resRegister = await axios.post('/api/auth/signup', {\n                username,\n                password\n            });\n            toast.success('Аккаунт зарегестрирован');\n            const res = await axios.post('/api/auth/login', {\n                username,\n                password,\n            });\n            localStorage.setItem('token', res.data.response.token);\n            setUser(res.data.response.user);\n            return true;\n        } catch (err) {\n            console.log(err);\n            toast.error(err.response.data.error.reason);\n            return false;\n        }\n    }\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const res = await axios.get('/api/auth/me');\n                setUser(res.data.response.user);\n            } catch (err) {\n                console.log(err);\n            }\n            setLoading(false);\n        }\n        if (loading) fetchUser();\n    }, [loading]);\n\n    return (\n        <UserContext.Provider value={{\n            user: user,\n            isAuthenticated: !!user,\n            isLoading: loading,\n            logout: logout,\n            login: login,\n            register: register,\n        }}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider;","/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx",["90","91"],"import { Box, Button, Container, createMuiTheme, ThemeProvider, Typography } from '@material-ui/core';\nimport { YMaps } from 'react-yandex-maps';\nimport './App.css';\nimport UserProvider from './contexts/UserContext';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport MakeOrder from './components/MakeOrder';\nimport OrderPage from './components/OrderPage';\nimport ProtectedRoute from './routes/ProtectedRoute';\nimport MyOrders from './components/MyOrders/MyOrders';\nimport Login from './components/Auth/Login';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport BottomMenu from './components/shared/BottomMenu';\nimport Register from './components/Auth/Register';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF9900',\n      contrastText: '#FFFFFF',\n    },\n    text: {\n      primary: '#000000',\n      secondary: '#4a4f52',\n    }\n  },\n  typography: {\n    fontFamily: [\n      \"'Inter'\",\n    ].join(','),\n    h2: {\n      fontSize: 20,\n      fontWeight: 'bold',\n    },\n    h3: {\n      fontSize: 18,\n    },\n    h4: {\n      fontSize: 12,\n    }\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <UserProvider>\n        <YMaps>\n          <ToastContainer />\n          <Box bgcolor=\"#E5E5E5\">\n            <Container maxWidth=\"sm\">\n              <Box bgcolor=\"white\" minHeight=\"100vh\" position=\"relative\">\n                <Router>\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Redirect to=\"/makeorder\" />\n                    </Route>\n                    <Route exact path=\"/makeorder\" component={MakeOrder} />\n                    <Route exact path=\"/order/:id\" component={OrderPage} />\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/register\" component={Register} />\n                    <ProtectedRoute exact path=\"/myorders\" component={MyOrders} />\n                  </Switch>\n                  <BottomMenu />\n                </Router>\n              </Box>\n            </Container>\n          </Box>\n        </YMaps>\n      </UserProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx",["92"],"import React, { forwardRef, useEffect, useState } from 'react';\nimport { Map, Placemark } from 'react-yandex-maps';\nimport { AppBar, Box, Dialog, IconButton, List, ListItem, \n    ListItemIcon, Slide, Toolbar, Typography, ListItemText, Grid, Button } from '@material-ui/core';\nimport { Close as CloseIcon, LocationOn } from '@material-ui/icons';\nimport axios from 'axios';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DroneMap = ({ open, onClose, onSelect }) => {\n    const [dronePoints, setDronePoints] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedPoint, setSelectedPoint] = useState(null);\n    const [coords, setCoords] = useState([55.75, 37.57]);\n\n    useEffect(() => {\n        const fetchDronePoints = async () => {\n            const res = await axios.get(`/api/dronepoint/all`);\n            setDronePoints(res.data.response);\n            setLoading(false);\n        }\n        if (loading) fetchDronePoints();\n    }, [loading])\n\n    return (\n        <Dialog fullScreen open={!!open} onClose={onClose}\n        TransitionComponent={Transition}>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={onClose}\n                    aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h2\">\n                        Выберите Дрон поинт ({ open === 'from' ? 'откуда' : 'куда'})\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            {loading && <LoadingSpinner height={'800px'}/>}\n            {!loading && <Grid container direction=\"column\">\n                <Grid item>\n                    <Map state={{ center: coords, zoom: 9 }}\n                    className=\"yandex-map\"\n                    width=\"100%\" height=\"67vh\">\n                        {dronePoints.map(point => \n                        <Placemark key={point.name} geometry={point.pos}\n                        options={{ iconColor: point.name === selectedPoint ? 'red' : 'blue' }}/>)}\n                    </Map>\n                </Grid>\n                <Grid item>\n                    <List component=\"nav\" style={{ height: '20vh', overflow: 'auto' }}>\n                        {dronePoints.map(point => \n                        <ListItem button selected={point.name === selectedPoint}\n                        key={point.name}\n                        onClick={() => {\n                            setSelectedPoint(p => p === point.name ? null : point.name);\n                            setCoords(point.pos);\n                        }}>\n                            <ListItemIcon>\n                                <LocationOn color={point.name === selectedPoint ? \n                                'secondary' : 'inherit'}/>\n                            </ListItemIcon>\n                            <ListItemText primary={point.name}/>\n                        </ListItem>)}\n                    </List>\n                </Grid>\n            </Grid>}\n            <Button fullWidth variant=\"contained\" color=\"primary\"\n            disabled={!selectedPoint}\n            style={{ position: 'relative', bottom: 0 }}\n            onClick={() => {\n                const point = dronePoints.find(p => p.name === selectedPoint);\n                onSelect(point, open);\n                onClose();\n                setSelectedPoint(null);\n            }}>Выбрать</Button>\n        </Dialog>\n    )\n}\n\nexport default DroneMap\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx",["93","94","95","96","97"],"import { Box, Button, Container, Grid, Link, Paper, Typography, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport { CLIENT_URL } from '../../utils/api';\n\nfunction calcCrow([lat1, lon1], [lat2, lon2]) {\n    var R = 6371; // km\n    var dLat = toRad(lat2-lat1);\n    var dLon = toRad(lon2-lon1);\n    var lat1 = toRad(lat1);\n    var lat2 = toRad(lat2);\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c;\n    return d;\n}\n\n// Converts numeric degrees to radians\nfunction toRad(value) {\n    return value * Math.PI / 180;\n}\n\nconst OrderDetails = ({ placeTo, placeFrom, onSubmit, order }) => {\n    if (!placeFrom || !placeTo) {\n        return (\n            <Typography variant=\"h3\" align=\"center\">\n                Выберите место отправления и доставки, чтобы оформить заказ\n            </Typography>\n        )\n    }\n    const distance = calcCrow(placeFrom.pos, placeTo.pos).toFixed(2);\n    const time = 100;\n    const price = 100;\n    return (\n        <React.Fragment>\n            <Grid item>\n                <Paper elevation={5} placeholder=\"Информация о заказе\">\n                    <Box padding={'15px'} className=\"order-info-box\">\n                        <Grid container spacing={2} direction=\"column\">\n                            <Grid item>\n                                <Typography variant=\"h2\">Информация о заказе</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">\n                                    {placeFrom.name} {'==>'} {placeTo.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">Расстояние: {distance}km</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">Время: {time}мин</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h3\">Цена: {price}руб</Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Grid>\n            <Grid item>\n                {!order && <Box width=\"300px\">\n                    <Button variant=\"contained\" color=\"primary\" fullWidth style={{\n                        textTransform: 'none',\n                    }} onClick={onSubmit}>\n                        <Typography variant=\"h3\">Заказать</Typography>\n                    </Button>\n                </Box>}\n                {order && <Box className=\"order-link\">\n                    <Typography variant=\"h2\" align=\"center\">Заказ оформлен</Typography>\n                    <Grid container justify=\"center\">\n                        <Grid item xs={10} sm={10}>\n                            <Box border=\"2px solid black\" padding={1} marginTop={1}>\n                                <Link href={`/order/${order._id}`} color=\"secondary\">\n                                    <Typography style={{ wordWrap: 'break-word' }}>\n                                        {`${window.location.hostname}/order/${order._id}`}\n                                    </Typography>\n                                </Link>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <Box marginTop={2}>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Button href={`/order/${order._id}`} variant={'contained'}\n                                color=\"primary\">\n                                    Перейти к отслеживанию\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>}\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default OrderDetails;\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/LoadingSpinner.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/api.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/OrderPage.jsx",["98","99","100"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/MakeOrder.jsx",["101","102"],"import { Box, Button, Grid, Input, Typography } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport DroneMap from '../shared/DroneMap';\nimport HeaderMenu from '../shared/HeaderMenu';\nimport OrderDetails from './OrderDetails';\nimport axios from 'axios';\nimport { UserContext } from '../../contexts/UserContext';\nimport LoadingSpinner from '../shared/LoadingSpinner';\nimport './MakeOrder.css';\n\nconst MakeOrder = () => {\n    const [placeFrom, setPlaceFrom] = useState(null);\n    const [placeTo, setPlaceTo] = useState(null);\n    const [mapOpen, setMapOpen] = useState(false);\n    const [order, setOrder] = useState(null);\n    const [isOrdering, setIsOrdering] = useState(false);\n    const { isAuthenticated } = useContext(UserContext);\n\n    useEffect(() => {\n        const makeOrder = async () => {\n            try {\n                const res = await axios.post(`/api/order/create/${isAuthenticated ? 'auth' : 'guest'}`, {\n                    placeFrom: placeFrom._id,\n                    placeTo: placeTo._id,\n                });\n                setOrder(res.data.response);\n            } catch(err) {\n                console.log(err);\n            }\n            setIsOrdering(false);\n        }\n        if (isOrdering) makeOrder();\n    }, [isOrdering, placeFrom, placeTo]);\n\n    if (isOrdering) return (\n        <LoadingSpinner height=\"100vh\"/>\n    )\n\n    return (\n        <React.Fragment>\n            <DroneMap open={mapOpen} onClose={() => setMapOpen(false)}\n            onSelect={(point, type) => {\n                if (type === 'from') {\n                    setPlaceFrom(point);\n                } else {\n                    setPlaceTo(point);\n                }\n            }}/>\n            <HeaderMenu text={\"Оформить заказ\"}/>\n            <Box position=\"relative\"\n            className=\"main-box\"\n            width=\"100wv\">\n                <Grid container alignItems=\"center\" direction=\"column\"\n                spacing={3}>\n                    <Grid item>\n                        <Box width=\"300px\">\n                            <Typography variant=\"h3\">Маршрут</Typography>\n                            <Button variant=\"text\" fullWidth \n                            disabled={!!order}\n                            onClick={e => setMapOpen('from')}\n                            style={{\n                                border: '1px solid black',\n                                marginTop: 12,\n                                textTransform: 'none',\n                            }}>\n                                {placeFrom?.name || 'Откуда'}\n                            </Button>\n                            <Button variant=\"text\" fullWidth\n                            disabled={!!order} \n                            onClick={e => setMapOpen('to')}\n                            style={{\n                                border: '1px solid black',\n                                marginTop: 12,\n                                textTransform: 'none',\n                            }}>\n                                {placeTo?.name || 'Куда'}\n                            </Button>\n                        </Box>\n                    </Grid>\n                    <OrderDetails placeFrom={placeFrom} placeTo={placeTo}\n                    order={order} \n                    onSubmit={() => setIsOrdering(true)}/>\n                </Grid>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nexport default MakeOrder\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/routes/ProtectedRoute.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MyOrders/MyOrders.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Login.jsx",["103"],"import { Button, Grid, makeStyles, TextField } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { UserContext } from '../../contexts/UserContext'\nimport HeaderMenu from '../shared/HeaderMenu'\nimport LoadingSpinner from '../shared/LoadingSpinner'\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '20px',\n        width: '100%',\n    },\n    input: {\n         \"&::placeholder\": {\n        color: \"gray\"\n      },\n    }\n})\n\nconst Login = () => {\n    const { login } = useContext(UserContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [submitting, setSubmitting] = useState(false);\n\n    useEffect(() => {\n        const submit = async () => {\n            const success = await login({ username, password });\n            if (success) {\n                return history.push('/');\n            }\n            setSubmitting(false);\n            toast.error('Неверный логин или пароль');\n        }\n        if (submitting) submit();\n    }, [submitting]);\n    if (submitting) return (\n        <LoadingSpinner />\n    )\n    return (\n        <React.Fragment>\n            <HeaderMenu text={'Авторизация'}/>\n            <Grid container spacing={2} direction=\"column\"\n            className={classes.container}>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Логин\" variant=\"outlined\" size=\"small\"\n                        fullWidth value={username} onChange={e => setUsername(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Пароль\" variant=\"outlined\" type=\"password\" size=\"small\"\n                        fullWidth value={password} onChange={e => setPassword(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"contained\" color=\"primary\" fullWidth\n                        onClick={e => setSubmitting(true)}>\n                            Войти\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\">\n                            Забыли пароль\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\"\n                        href=\"/register\">\n                            Зарегистрироваться\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default Login\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/BottomMenu.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Register.jsx",["104"],"import { Button, Grid, makeStyles, TextField } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { UserContext } from '../../contexts/UserContext'\nimport HeaderMenu from '../shared/HeaderMenu'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginTop: '20px',\n        width: '100%',\n    },\n    input: {\n         \"&::placeholder\": {\n        color: \"gray\"\n      },\n    }\n}))\n\nconst Register = () => {\n    const { register } = useContext(UserContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [submitting, setSubmitting] = useState(false);\n\n    useEffect(() => {\n        const submit = async () => {\n            if (password !== password2) {\n                toast.warn('Пароли не совпадают');\n                return setSubmitting(false);\n            }\n            const success = await register({ username, password });\n            if (success) {\n                return history.push('/');\n            }\n            setSubmitting(false);\n        }\n        if (submitting) submit();\n    }, [submitting]);\n\n    return (\n        <React.Fragment>\n            <HeaderMenu text={'Регистрация'}/>\n            <Grid container spacing={2} direction=\"column\"\n            className={classes.container}>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Логин\" variant=\"outlined\" size=\"small\"\n                        fullWidth value={username} onChange={e => setUsername(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Пароль\" variant=\"outlined\" type=\"password\" size=\"small\"\n                        fullWidth value={password} onChange={e => setPassword(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Подтверждение пароля\" variant=\"outlined\" type=\"password\" \n                        size=\"small\" fullWidth value={password2} \n                        onChange={e => setPassword2(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"contained\" color=\"primary\" fullWidth\n                        onClick={e => setSubmitting(true)}>\n                            Зарегистрироваться\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\"\n                        href=\"/login\">\n                            Логин\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default Register\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/DroneLocation.jsx",["105"],"import { Box } from '@material-ui/core'\nimport React from 'react'\nimport { Map, Placemark } from 'react-yandex-maps'\n\nconst DroneLocation = ({ pos }) => {\n    return (\n        <Map state={{ center: pos, zoom: 10 }}\n        width=\"100%\" height=\"30vh\">\n            <Placemark geometry={pos} options={{\n                iconColor: 'red',\n                iconLayout: 'default#image',\n                iconImageHref: '/drone.png',\n                iconImageSize: [40, 40],\n                iconImageOffSet: [-20, -20],\n            }}/>\n        </Map>\n    )\n}\n\nexport default DroneLocation\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":42,"column":19,"nodeType":"112","messageId":"113","endLine":42,"endColumn":30},{"ruleId":"110","severity":1,"message":"114","line":1,"column":15,"nodeType":"112","messageId":"113","endLine":1,"endColumn":21},{"ruleId":"110","severity":1,"message":"115","line":1,"column":65,"nodeType":"112","messageId":"113","endLine":1,"endColumn":75},{"ruleId":"110","severity":1,"message":"116","line":3,"column":18,"nodeType":"112","messageId":"113","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"117","line":1,"column":23,"nodeType":"112","messageId":"113","endLine":1,"endColumn":32},{"ruleId":"110","severity":1,"message":"118","line":1,"column":65,"nodeType":"112","messageId":"113","endLine":1,"endColumn":78},{"ruleId":"110","severity":1,"message":"119","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":9,"column":9,"nodeType":"112","messageId":"122","endLine":9,"endColumn":13},{"ruleId":"120","severity":1,"message":"123","line":10,"column":9,"nodeType":"112","messageId":"122","endLine":10,"endColumn":13},{"ruleId":"110","severity":1,"message":"124","line":1,"column":41,"nodeType":"112","messageId":"113","endLine":1,"endColumn":46},{"ruleId":"110","severity":1,"message":"125","line":24,"column":11,"nodeType":"112","messageId":"113","endLine":24,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":35,"column":8,"nodeType":"128","endLine":35,"endColumn":17,"suggestions":"129"},{"ruleId":"110","severity":1,"message":"130","line":1,"column":29,"nodeType":"112","messageId":"113","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"131","line":33,"column":8,"nodeType":"128","endLine":33,"endColumn":40,"suggestions":"132"},{"ruleId":"126","severity":1,"message":"133","line":39,"column":8,"nodeType":"128","endLine":39,"endColumn":20,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"135","line":42,"column":8,"nodeType":"128","endLine":42,"endColumn":20,"suggestions":"136"},{"ruleId":"110","severity":1,"message":"116","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'resRegister' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'useMediaQuery' is defined but never used.","'CLIENT_URL' is defined but never used.","no-redeclare","'lat1' is already defined.","redeclared","'lat2' is already defined.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'history', 'login', 'password', and 'username'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'history', 'password', 'password2', 'register', and 'username'. Either include them or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [id, loading]",{"range":"151","text":"152"},"Update the dependencies array to be: [isAuthenticated, isOrdering, placeFrom, placeTo]",{"range":"153","text":"154"},"Update the dependencies array to be: [history, login, password, submitting, username]",{"range":"155","text":"156"},"Update the dependencies array to be: [history, password, password2, register, submitting, username]",{"range":"157","text":"158"},[1043,1052],"[id, loading]",[1280,1312],"[isAuthenticated, isOrdering, placeFrom, placeTo]",[1206,1218],"[history, login, password, submitting, username]",[1322,1334],"[history, password, password2, register, submitting, username]"]