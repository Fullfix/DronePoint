[{"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js":"1","/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js":"2","/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx":"3","/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx":"4","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx":"5","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx":"6","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx":"7","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/LoadingSpinner.jsx":"8","/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/api.js":"9","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/OrderPage.jsx":"10","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/index.js":"11","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.js":"12","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/MakeOrder.jsx":"13","/home/fullfix/Documents/GitHub/DronePoint/client/src/routes/ProtectedRoute.jsx":"14","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MyOrders/MyOrders.jsx":"15","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Login.jsx":"16","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/BottomMenu.jsx":"17","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Register.jsx":"18","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/DroneLocation.jsx":"19","/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/display.js":"20"},{"size":362,"mtime":1606229592683,"results":"21","hashOfConfig":"22"},{"size":500,"mtime":1606229592683,"results":"23","hashOfConfig":"22"},{"size":2569,"mtime":1608047051962,"results":"24","hashOfConfig":"22"},{"size":2304,"mtime":1610025780975,"results":"25","hashOfConfig":"22"},{"size":456,"mtime":1608485221218,"results":"26","hashOfConfig":"22"},{"size":3661,"mtime":1609080483077,"results":"27","hashOfConfig":"22"},{"size":6092,"mtime":1610029015814,"results":"28","hashOfConfig":"22"},{"size":558,"mtime":1608485689900,"results":"29","hashOfConfig":"22"},{"size":755,"mtime":1610207374353,"results":"30","hashOfConfig":"22"},{"size":2725,"mtime":1610207381853,"results":"31","hashOfConfig":"22"},{"size":63,"mtime":1607759127813,"results":"32","hashOfConfig":"22"},{"size":63,"mtime":1607759035822,"results":"33","hashOfConfig":"22"},{"size":3838,"mtime":1610028904047,"results":"34","hashOfConfig":"22"},{"size":722,"mtime":1607942945734,"results":"35","hashOfConfig":"22"},{"size":1523,"mtime":1610029239376,"results":"36","hashOfConfig":"22"},{"size":3311,"mtime":1608485357554,"results":"37","hashOfConfig":"22"},{"size":1879,"mtime":1608020596524,"results":"38","hashOfConfig":"22"},{"size":3442,"mtime":1608047127690,"results":"39","hashOfConfig":"22"},{"size":580,"mtime":1609081347137,"results":"40","hashOfConfig":"22"},{"size":274,"mtime":1610025796763,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1j6kizk",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/fullfix/Documents/GitHub/DronePoint/client/src/reportWebVitals.js",[],["90","91"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/contexts/UserContext.jsx",["92"],"import React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport const UserContext = createContext({\n    user: null,\n    isAuthenticated: false,\n    isLoading: true,\n    logout: () => {},\n    login: async ({ username, password }) => {},\n    register: async ({ username, password }) => {},\n})\n\nconst UserProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const token = localStorage.getItem('token');\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n\n    const logout = () => {\n        localStorage.removeItem('Authorization');\n        setUser(null);\n    }\n\n    const login = async ({ username, password }) => {\n        try {\n            const res = await axios.post('/api/auth/login', {\n                username,\n                password,\n            });\n            localStorage.setItem('token', res.data.response.token);\n            setUser(res.data.response.user);\n            return true;\n        } catch (err) {\n            console.log(err);\n            return false;\n        }\n    }\n\n    const register = async ({ username, password }) => {\n        try {\n            const resRegister = await axios.post('/api/auth/signup', {\n                username,\n                password\n            });\n            toast.success('Аккаунт зарегестрирован');\n            const res = await axios.post('/api/auth/login', {\n                username,\n                password,\n            });\n            localStorage.setItem('token', res.data.response.token);\n            setUser(res.data.response.user);\n            return true;\n        } catch (err) {\n            console.log(err);\n            toast.error(err.response.data.error.reason);\n            return false;\n        }\n    }\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const res = await axios.get('/api/auth/me');\n                setUser(res.data.response.user);\n            } catch (err) {\n                console.log(err);\n            }\n            setLoading(false);\n        }\n        if (loading) fetchUser();\n    }, [loading]);\n\n    return (\n        <UserContext.Provider value={{\n            user: user,\n            isAuthenticated: !!user,\n            isLoading: loading,\n            logout: logout,\n            login: login,\n            register: register,\n        }}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider;","/home/fullfix/Documents/GitHub/DronePoint/client/src/App.jsx",["93","94"],"import { Box, Button, Container, createMuiTheme, ThemeProvider, Typography } from '@material-ui/core';\nimport { YMaps } from 'react-yandex-maps';\nimport './App.css';\nimport UserProvider from './contexts/UserContext';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport MakeOrder from './components/MakeOrder';\nimport OrderPage from './components/OrderPage';\nimport ProtectedRoute from './routes/ProtectedRoute';\nimport MyOrders from './components/MyOrders/MyOrders';\nimport Login from './components/Auth/Login';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport BottomMenu from './components/shared/BottomMenu';\nimport Register from './components/Auth/Register';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF9900',\n      contrastText: '#FFFFFF',\n    },\n    text: {\n      primary: '#000000',\n      secondary: '#4a4f52',\n    }\n  },\n  typography: {\n    fontFamily: [\n      \"'Inter'\",\n    ].join(','),\n    h2: {\n      fontSize: 20,\n      fontWeight: 'bold',\n    },\n    h3: {\n      fontSize: 18,\n    },\n    h4: {\n      fontSize: 16,\n    },\n    h5: {\n      fontSize: 14,\n    },\n    h6: {\n      fontSize: 12,\n    }\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <UserProvider>\n        <YMaps>\n          <ToastContainer />\n          <Box bgcolor=\"#E5E5E5\">\n            <Container maxWidth=\"sm\">\n              <Box bgcolor=\"white\" minHeight=\"100vh\" position=\"relative\">\n                <Router>\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Redirect to=\"/makeorder\" />\n                    </Route>\n                    <Route exact path=\"/makeorder\" component={MakeOrder} />\n                    <Route exact path=\"/order/:id\" component={OrderPage} />\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/register\" component={Register} />\n                    <ProtectedRoute exact path=\"/myorders\" component={MyOrders} />\n                  </Switch>\n                  <BottomMenu />\n                </Router>\n              </Box>\n            </Container>\n          </Box>\n        </YMaps>\n      </UserProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/HeaderMenu.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/DroneMap.jsx",["95"],"import React, { forwardRef, useEffect, useState } from 'react';\nimport { Map, Placemark } from 'react-yandex-maps';\nimport { AppBar, Box, Dialog, IconButton, List, ListItem, \n    ListItemIcon, Slide, Toolbar, Typography, ListItemText, Grid, Button } from '@material-ui/core';\nimport { Close as CloseIcon, LocationOn } from '@material-ui/icons';\nimport axios from 'axios';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DroneMap = ({ open, onClose, onSelect }) => {\n    const [dronePoints, setDronePoints] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedPoint, setSelectedPoint] = useState(null);\n    const [coords, setCoords] = useState([55.75, 37.57]);\n\n    useEffect(() => {\n        const fetchDronePoints = async () => {\n            const res = await axios.get(`/api/dronepoint/all`);\n            setDronePoints(res.data.response);\n            setLoading(false);\n        }\n        if (loading) fetchDronePoints();\n    }, [loading])\n\n    return (\n        <Dialog fullScreen open={!!open} onClose={onClose}\n        TransitionComponent={Transition}>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={onClose}\n                    aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h2\">\n                        Выберите Дрон поинт ({ open === 'from' ? 'откуда' : 'куда'})\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            {loading && <LoadingSpinner height={'800px'}/>}\n            {!loading && <Grid container direction=\"column\">\n                <Grid item>\n                    <Map state={{ center: coords, zoom: 9 }}\n                    className=\"yandex-map\"\n                    width=\"100%\" height=\"67vh\">\n                        {dronePoints.map(point => \n                        <Placemark key={point.name} geometry={point.pos}\n                        options={{ iconColor: point.name === selectedPoint ? 'red' : 'blue' }}/>)}\n                    </Map>\n                </Grid>\n                <Grid item>\n                    <List component=\"nav\" style={{ height: '20vh', overflow: 'auto' }}>\n                        {dronePoints.map(point => \n                        <ListItem button selected={point.name === selectedPoint}\n                        key={point.name}\n                        onClick={() => {\n                            setSelectedPoint(p => p === point.name ? null : point.name);\n                            setCoords(point.pos);\n                        }}>\n                            <ListItemIcon>\n                                <LocationOn color={point.name === selectedPoint ? \n                                'secondary' : 'inherit'}/>\n                            </ListItemIcon>\n                            <ListItemText primary={point.name}/>\n                        </ListItem>)}\n                    </List>\n                </Grid>\n            </Grid>}\n            <Button fullWidth variant=\"contained\" color=\"primary\"\n            disabled={!selectedPoint}\n            style={{ position: 'relative', bottom: 0 }}\n            onClick={() => {\n                const point = dronePoints.find(p => p.name === selectedPoint);\n                onSelect(point, open);\n                onClose();\n                setSelectedPoint(null);\n            }}>Выбрать</Button>\n        </Dialog>\n    )\n}\n\nexport default DroneMap\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/OrderDetails.jsx",["96","97","98","99","100","101","102"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/LoadingSpinner.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/api.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/OrderPage.jsx",["103","104","105"],"import { Box, Button, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { fetchOrder, droneAction } from '../../utils/api';\nimport HeaderMenu from '../shared/HeaderMenu';\nimport LoadingSpinner from '../shared/LoadingSpinner';\nimport DroneLocation from './DroneLocation';\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    location: {\n        marginTop: '20px',\n    }\n}))\n\nconst statusToText = {\n    \"not-started\": \"Ещё не началась\",\n    \"in-progress\": \"В процессе\",\n    \"completed\": \"Доставлена\",\n}\n\nconst OrderPage = () => {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [order, setOrder] = useState(null);\n\n    useEffect(() => {\n        const getOrder = async () => {\n            const order = await fetchOrder(id);\n            setOrder(order);\n            setLoading(false);\n        }\n        if (loading) getOrder();\n    }, [loading]);\n\n    console.log(order);\n\n    if (loading) return (\n        <LoadingSpinner />\n    )\n    if (!order) return (\n        <Redirect to=\"/\" />\n    )\n    return (\n        <React.Fragment>\n            <HeaderMenu text={'Заказ'}/>\n            <Box padding={'15px'} className=\"order-info-box\">\n                <Grid container spacing={2} direction=\"column\">\n                    <Grid item>\n                        <Typography variant=\"h2\">Информация о заказе</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h3\">\n                            {order.placeFrom.name} {'==>'} {order.placeTo.name}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h3\">Расстояние: {order.distance} км</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h3\">Цена: {order.price} ₽</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h3\">\n                            Статус доставки: {statusToText[order.state]}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n            <DroneLocation pos={order.drone.pos}/>\n            <Button variant=\"contained\" color=\"primary\" fullWidth\n            onClick={() => droneAction(order.drone._id, order._id)}>\n                Доставить\n            </Button>\n        </React.Fragment>\n    )\n}\n\nexport default OrderPage\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/index.js",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MakeOrder/MakeOrder.jsx",["106","107"],"/home/fullfix/Documents/GitHub/DronePoint/client/src/routes/ProtectedRoute.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/MyOrders/MyOrders.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Login.jsx",["108"],"import { Button, Grid, makeStyles, TextField } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { UserContext } from '../../contexts/UserContext'\nimport HeaderMenu from '../shared/HeaderMenu'\nimport LoadingSpinner from '../shared/LoadingSpinner'\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '20px',\n        width: '100%',\n    },\n    input: {\n         \"&::placeholder\": {\n        color: \"gray\"\n      },\n    }\n})\n\nconst Login = () => {\n    const { login } = useContext(UserContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [submitting, setSubmitting] = useState(false);\n\n    useEffect(() => {\n        const submit = async () => {\n            const success = await login({ username, password });\n            if (success) {\n                return history.push('/');\n            }\n            setSubmitting(false);\n            toast.error('Неверный логин или пароль');\n        }\n        if (submitting) submit();\n    }, [submitting]);\n    if (submitting) return (\n        <LoadingSpinner />\n    )\n    return (\n        <React.Fragment>\n            <HeaderMenu text={'Авторизация'}/>\n            <Grid container spacing={2} direction=\"column\"\n            className={classes.container}>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Логин\" variant=\"outlined\" size=\"small\"\n                        fullWidth value={username} onChange={e => setUsername(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Пароль\" variant=\"outlined\" type=\"password\" size=\"small\"\n                        fullWidth value={password} onChange={e => setPassword(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"contained\" color=\"primary\" fullWidth\n                        onClick={e => setSubmitting(true)}>\n                            Войти\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\">\n                            Забыли пароль\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\"\n                        href=\"/register\">\n                            Зарегистрироваться\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default Login\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/shared/BottomMenu.jsx",[],"/home/fullfix/Documents/GitHub/DronePoint/client/src/components/Auth/Register.jsx",["109"],"import { Button, Grid, makeStyles, TextField } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { UserContext } from '../../contexts/UserContext'\nimport HeaderMenu from '../shared/HeaderMenu'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginTop: '20px',\n        width: '100%',\n    },\n    input: {\n         \"&::placeholder\": {\n        color: \"gray\"\n      },\n    }\n}))\n\nconst Register = () => {\n    const { register } = useContext(UserContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [submitting, setSubmitting] = useState(false);\n\n    useEffect(() => {\n        const submit = async () => {\n            if (password !== password2) {\n                toast.warn('Пароли не совпадают');\n                return setSubmitting(false);\n            }\n            const success = await register({ username, password });\n            if (success) {\n                return history.push('/');\n            }\n            setSubmitting(false);\n        }\n        if (submitting) submit();\n    }, [submitting]);\n\n    return (\n        <React.Fragment>\n            <HeaderMenu text={'Регистрация'}/>\n            <Grid container spacing={2} direction=\"column\"\n            className={classes.container}>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Логин\" variant=\"outlined\" size=\"small\"\n                        fullWidth value={username} onChange={e => setUsername(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Пароль\" variant=\"outlined\" type=\"password\" size=\"small\"\n                        fullWidth value={password} onChange={e => setPassword(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <TextField label=\"Подтверждение пароля\" variant=\"outlined\" type=\"password\" \n                        size=\"small\" fullWidth value={password2} \n                        onChange={e => setPassword2(e.target.value)}/>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"contained\" color=\"primary\" fullWidth\n                        onClick={e => setSubmitting(true)}>\n                            Зарегистрироваться\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item container justify=\"center\">\n                    <Grid item xs={10}>\n                        <Button variant=\"text\" color=\"default\" fullWidth size=\"small\"\n                        href=\"/login\">\n                            Логин\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default Register\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/components/OrderPage/DroneLocation.jsx",["110"],"import { Box } from '@material-ui/core'\nimport React from 'react'\nimport { Map, Placemark } from 'react-yandex-maps'\n\nconst DroneLocation = ({ pos }) => {\n    return (\n        <Map state={{ center: pos, zoom: 10 }}\n        width=\"100%\" height=\"30vh\">\n            <Placemark geometry={pos} options={{\n                iconColor: 'red',\n                iconLayout: 'default#image',\n                iconImageHref: '/drone.png',\n                iconImageSize: [40, 40],\n                iconImageOffSet: [-20, -20],\n            }}/>\n        </Map>\n    )\n}\n\nexport default DroneLocation\n","/home/fullfix/Documents/GitHub/DronePoint/client/src/utils/display.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":42,"column":19,"nodeType":"117","messageId":"118","endLine":42,"endColumn":30},{"ruleId":"115","severity":1,"message":"119","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":21},{"ruleId":"115","severity":1,"message":"120","line":1,"column":65,"nodeType":"117","messageId":"118","endLine":1,"endColumn":75},{"ruleId":"115","severity":1,"message":"121","line":3,"column":18,"nodeType":"117","messageId":"118","endLine":3,"endColumn":21},{"ruleId":"115","severity":1,"message":"122","line":1,"column":23,"nodeType":"117","messageId":"118","endLine":1,"endColumn":31},{"ruleId":"115","severity":1,"message":"123","line":1,"column":33,"nodeType":"117","messageId":"118","endLine":1,"endColumn":42},{"ruleId":"115","severity":1,"message":"124","line":1,"column":68,"nodeType":"117","messageId":"118","endLine":1,"endColumn":73},{"ruleId":"115","severity":1,"message":"125","line":1,"column":82,"nodeType":"117","messageId":"118","endLine":1,"endColumn":92},{"ruleId":"115","severity":1,"message":"126","line":1,"column":106,"nodeType":"117","messageId":"118","endLine":1,"endColumn":119},{"ruleId":"127","severity":1,"message":"128","line":10,"column":9,"nodeType":"117","messageId":"129","endLine":10,"endColumn":13},{"ruleId":"127","severity":1,"message":"130","line":11,"column":9,"nodeType":"117","messageId":"129","endLine":11,"endColumn":13},{"ruleId":"115","severity":1,"message":"124","line":1,"column":41,"nodeType":"117","messageId":"118","endLine":1,"endColumn":46},{"ruleId":"115","severity":1,"message":"131","line":24,"column":11,"nodeType":"117","messageId":"118","endLine":24,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":35,"column":8,"nodeType":"134","endLine":35,"endColumn":17,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"136","line":1,"column":29,"nodeType":"117","messageId":"118","endLine":1,"endColumn":34},{"ruleId":"132","severity":1,"message":"137","line":39,"column":8,"nodeType":"134","endLine":39,"endColumn":57,"suggestions":"138"},{"ruleId":"132","severity":1,"message":"139","line":39,"column":8,"nodeType":"134","endLine":39,"endColumn":20,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"141","line":42,"column":8,"nodeType":"134","endLine":42,"endColumn":20,"suggestions":"142"},{"ruleId":"115","severity":1,"message":"121","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'resRegister' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Checkbox' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'RadioGroup' is defined but never used.","'useMediaQuery' is defined but never used.","no-redeclare","'lat1' is already defined.","redeclared","'lat2' is already defined.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'history', 'login', 'password', and 'username'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'history', 'password', 'password2', 'register', and 'username'. Either include them or remove the dependency array.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [id, loading]",{"range":"157","text":"158"},"Update the dependencies array to be: [isOrdering, placeFrom, placeTo, distance, price, isAuthenticated]",{"range":"159","text":"160"},"Update the dependencies array to be: [history, login, password, submitting, username]",{"range":"161","text":"162"},"Update the dependencies array to be: [history, password, password2, register, submitting, username]",{"range":"163","text":"164"},[1043,1052],"[id, loading]",[1494,1543],"[isOrdering, placeFrom, placeTo, distance, price, isAuthenticated]",[1206,1218],"[history, login, password, submitting, username]",[1322,1334],"[history, password, password2, register, submitting, username]"]